import axios, { AxiosError } from 'axios';

const API_URL =  process.env.REACT_APP_API_URL || 'http://localhost:4000';

const api = axios.create({
    baseURL: API_URL,
    withCredentials: true, // –í–∫–ª—é—á–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É cookies –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–∞—Ö
});

// üìå –ì–ª–æ–±–∞–ª—å–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
api.interceptors.response.use(
    response => response,
    (error: AxiosError) => {
        if (error.response) {
            const { status } = error.response;

            if (status === 401) {
                console.warn("üîí –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞, –≤—ã—Ö–æ–¥–∏–º...");
                localStorage.removeItem('token');
                window.location.href = '/login'; // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ showModal()
            }
            else if (status === 403) {
                console.warn("üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω");
                alert("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è.");
            }
            else if (status >= 500) {
                console.error("üî• –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
                alert("–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
            }
        } else {
            console.error("üåê –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error.message);
        }

        return Promise.reject(error);
    }
);

export default api;
