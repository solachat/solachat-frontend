import { encryptMessage, decryptMessage, generateSessionKey } from "../encryption/e2ee";

export const encryptChatMessage = (message: string, token1: string, token2: string) => {
    let sessionKey = localStorage.getItem("sessionKey");
    if (!sessionKey) {
        sessionKey = generateSessionKey(token1, token2);
        localStorage.setItem("sessionKey", sessionKey);
        console.log("üîë –ù–æ–≤—ã–π —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–π –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", sessionKey);
    } else {
        console.log("üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:", sessionKey);
    }
    return encryptMessage(message, sessionKey);
};


export const decryptChatMessage = (encryptedMessage: string, token1: string, token2: string) => {
    let sessionKey = localStorage.getItem("sessionKey");
    if (!sessionKey) {
        // –ï—Å–ª–∏ –≤–¥—Ä—É–≥ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω, –º–æ–∂–Ω–æ –µ–≥–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
        sessionKey = generateSessionKey(token1, token2);
        localStorage.setItem("sessionKey", sessionKey);
        console.log("üîë –ù–æ–≤—ã–π —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–π –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω (–¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏):", sessionKey);
    } else {
        console.log("üîë –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Å–µ—Å—Å–∏–æ–Ω–Ω—ã–π –∫–ª—é—á (–¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏):", sessionKey);
    }
    return decryptMessage(encryptedMessage, sessionKey);
};
